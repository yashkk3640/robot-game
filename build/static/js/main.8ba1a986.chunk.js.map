{"version":3,"sources":["Square.js","randomCube.js","Robot.js","App.js","index.js"],"names":["geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","RandomCube","mulX","Math","round","random","mulZ","x","z","position","y","Robot","mixer","actions","activeAction","previousAction","i","pointView","centerOffset","font","point","currKey","state","direction","value","mount","useRef","model","camera","THREE","window","innerWidth","innerHeight","set","lookAt","scene","background","fog","clock","dir","normalize","origin","arrowHelper","light","add","mesh","depthWrite","rotation","PI","grid","opacity","transparent","loader","GLTFLoader","renderer","antialias","loadText","size","height","curveSegments","bevelEnabled","bevelThickness","bevelSize","weight","bevelOffset","bevelSegments","computeBoundingBox","computeVertexNormals","boundingBox","max","min","castShadow","load","res","e","console","log","useEffect","gltf","current","createGUI","animations","setSize","gammaOutput","gammaFactor","appendChild","domElement","animate","undefined","error","keypress","onKeyPress","addEventListener","onWindowResize","removeEventListener","states","emotes","length","clip","action","clipAction","name","indexOf","clampWhenFinished","loop","play","fadeToAction","duration","callback","fadeOut","setTimeout","reset","setEffectiveTimeScale","setEffectiveWeight","fadeIn","aspect","updateProjectionMatrix","dt","getDelta","update","requestAnimationFrame","render","_clip","obj","len","diffX","diffZ","sqrt","checkCollide","remove","updateMorphTargets","setDirection","key","rotate","ref","style","bottom","right","onClick","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8ba1a986.chunk.js","sourcesContent":["import React, { useEffect, useRef ,useCallback} from \"react\";\r\nimport { Scene, PerspectiveCamera, WebGLRenderer, BoxGeometry, MeshBasicMaterial, Mesh } from \"three\";\r\n\r\nvar geometry = new BoxGeometry(3, 3, 3);\r\nvar material = new MeshBasicMaterial({ color: 0x00ff00 });\r\nexport const cube = new Mesh(geometry, material);\r\n\r\nconst Square = () => {\r\n    const mount = useRef()\r\n    const scene = new Scene();\r\n    const camera = new PerspectiveCamera(\r\n        75,\r\n        window.innerWidth / window.innerHeight,\r\n        0.1,\r\n        1000\r\n    );\r\n    const renderer = new WebGLRenderer();\r\n    camera.position.z = 5;\r\n\r\n    const animate = useCallback(() => {\r\n        requestAnimationFrame(animate);\r\n\r\n        cube.rotation.x += 0.01;\r\n        cube.rotation.y += 0.01;\r\n\r\n        renderer.render(scene, camera);\r\n    },[camera, renderer, scene]);\r\n\r\n\r\n    useEffect(() => {\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n        mount.current.appendChild(renderer.domElement);\r\n\r\n        scene.add(cube);\r\n        animate();\r\n    }, [animate, renderer, scene])\r\n    return <div ref={ref => (mount.current = ref)} />;\r\n\r\n}\r\nexport default Square;","// import React from 'react'\r\n\r\nexport const RandomCube = (cube) => {\r\n    \r\n    const mulX = Math.round(Math.random() * 2) - 1 ? 1 : -1\r\n    const mulZ = Math.round(Math.random() * 2) - 1 ? 1 : -1\r\n    const x = Math.round(Math.random() * 39) * 2 * mulX\r\n    const z = Math.round(Math.random() * 39) * 2 * mulZ\r\n    cube.position.x = x\r\n    cube.position.z = z\r\n    cube.position.y = 1\r\n}\r\n\r\nexport const checkCollide = (model,obj,len) => {\r\n\r\n    const diffX = model.x - obj.x\r\n    const diffZ = model.z - obj.z\r\n    // if(Math.round(model.x) == obj.x  && Math.round(model.z) == obj.z )\r\n    if(Math.sqrt(diffX * diffX  + diffZ * diffZ) < len )\r\n        return true\r\n    return false\r\n}","import React, { useRef, useEffect } from 'react';\r\n\r\nimport * as THREE from \"three\";\r\nimport GLTFLoader from 'three-gltf-loader'\r\n\r\n// import Stats from 'three/examples/jsm/libs/stats.module.js';\r\n// import { GUI } from 'three/examples/jsm/libs/dat.gui.module.js';\r\n// import FontType from 'three/examples/fonts/gentilis_bold.typeface.json';\r\n// import RobotGlb from 'RobotExpressive.glb'\r\n\r\nimport { cube } from './Square'\r\nimport { RandomCube, checkCollide } from './randomCube';\r\n\r\nconst Robot = () => {\r\n    // var gui, mixer, actions, activeAction, previousAction, i;\r\n    // var face, pointView, geometry, centerOffset, font, point = 1;\r\n    // var api = { state: 'Walking' };\r\n    RandomCube(cube)\r\n    let mixer, actions, activeAction, previousAction, i, pointView, geometry, centerOffset, font, point = 1;\r\n    var currKey = 'w'\r\n    var state = { direction: 'z', value: 1 };\r\n\r\n    const mount = useRef()\r\n    const model = useRef()\r\n\r\n    const camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.25, 300);\r\n    camera.position.set(0, 10, -30);\r\n    camera.lookAt(new THREE.Vector3(2, 2, 0));\r\n\r\n    const scene = new THREE.Scene();\r\n    scene.background = new THREE.Color(0xe0e0e0);\r\n    scene.fog = new THREE.Fog(0xe0e0e0, 50, 300);\r\n\r\n    const clock = new THREE.Clock();\r\n    // const stats = new Stats();\r\n\r\n    // arrow\r\n    var dir = new THREE.Vector3(1, 0, 0);\r\n\r\n    //normalize the direction vector (convert to vector of length 1)\r\n    dir.normalize();\r\n\r\n    var origin = new THREE.Vector3(0, 0.1, -5);\r\n    var length = 5;\r\n    var hex = 0xff0000;\r\n\r\n    var arrowHelper = new THREE.ArrowHelper(dir, origin, length, hex, 3);\r\n\r\n    // lights\r\n\r\n    var light = new THREE.HemisphereLight(0xffffff, 0x444444);\r\n    light.position.set(0, 20, 0);\r\n    scene.add(light);\r\n\r\n    light = new THREE.DirectionalLight(0xffffff);\r\n    light.position.set(0, 20, 10);\r\n    scene.add(light);\r\n\r\n    // ground\r\n\r\n    var mesh = new THREE.Mesh(new THREE.PlaneBufferGeometry(2000, 2000), new THREE.MeshPhongMaterial({ color: 0x999999, depthWrite: false }));\r\n    mesh.rotation.x = - Math.PI / 2;\r\n    scene.add(mesh);\r\n\r\n    var grid = new THREE.GridHelper(200, 40, 0x000000, 0x000000);\r\n\r\n    grid.material.opacity = 0.2;\r\n    grid.material.transparent = true;\r\n    scene.add(grid);\r\n\r\n    scene.add(cube)\r\n\r\n    // model\r\n\r\n    var loader = new GLTFLoader();\r\n\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n\r\n    const loadText = () => {\r\n        geometry = new THREE.TextGeometry(`Point ${point}`, {\r\n            font: font,\r\n            size: 2,\r\n            height: 1,\r\n            curveSegments: 1,\r\n            bevelEnabled: true,\r\n            bevelThickness: 0.1,\r\n            bevelSize: 0.01,\r\n            weight: \"normal\",\r\n            bevelOffset: 0,\r\n            bevelSegments: 1\r\n        });\r\n        geometry.computeBoundingBox();\r\n        geometry.computeVertexNormals();\r\n\r\n        centerOffset =\r\n            -0.5 * (geometry.boundingBox.max.x - geometry.boundingBox.min.x);\r\n\r\n        pointView = new THREE.Mesh(geometry, new THREE.MeshLambertMaterial({ color: 0x2233aa }))\r\n        pointView.rotation.y = 3.2\r\n        pointView.position.y = 5\r\n        pointView.position.x = centerOffset\r\n        pointView.castShadow = true;\r\n        scene.add(pointView)\r\n    }\r\n\r\n    // Text\r\n\r\n    var load = new THREE.FontLoader();\r\n    load.load('helvetiker_regular.typeface.js', function (res) {\r\n        font = res\r\n        loadText()\r\n    }, null, e => console.log(e));\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        loader.load('RobotExpressive.glb', function (gltf) {\r\n\r\n            model.current = gltf.scene;\r\n            scene.add(model.current);\r\n\r\n            createGUI(model.current, gltf.animations);\r\n            // renderer.setPixelRatio(window.devicePixelRatio);\r\n            renderer.setSize(window.innerWidth - 10, window.innerHeight - 10);\r\n            renderer.gammaOutput = true;\r\n            renderer.gammaFactor = 2.2;\r\n            mount.current.appendChild(renderer.domElement);\r\n\r\n            scene.add(arrowHelper);\r\n\r\n            // stats\r\n\r\n            // mount.current.appendChild(stats.dom);\r\n            animate()\r\n\r\n        }, undefined, function (e) {\r\n\r\n            console.error(e);\r\n\r\n        });\r\n\r\n        const keypress = onKeyPress\r\n        window.addEventListener('keypress', keypress)\r\n        window.addEventListener('resize', onWindowResize, false);\r\n\r\n        return () => {\r\n            window.removeEventListener('keypress', keypress)\r\n            window.removeEventListener('resize', onWindowResize, false);\r\n        }\r\n        // only execute when component initilize\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    const createGUI = (model, animations) => {\r\n\r\n        var states = ['Idle', 'Walking', 'Running', 'Dance', 'Death', 'Sitting', 'Standing'];\r\n        var emotes = ['Jump', 'Yes', 'No', 'Wave', 'Punch', 'ThumbsUp'];\r\n\r\n        // gui = new GUI();\r\n\r\n        mixer = new THREE.AnimationMixer(model);\r\n\r\n        actions = {};\r\n\r\n        for (i = 0; i < animations.length; i++) {\r\n\r\n            var clip = animations[i];\r\n            var action = mixer.clipAction(clip);\r\n            actions[clip.name] = action;\r\n\r\n            if (emotes.indexOf(clip.name) >= 0 || states.indexOf(clip.name) >= 4) {\r\n\r\n                action.clampWhenFinished = true;\r\n                action.loop = THREE.LoopOnce;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // states\r\n\r\n        // var statesFolder = gui.addFolder('States');\r\n\r\n        // var clipCtrl = statesFolder.add(api, 'state').options(states);\r\n\r\n        // clipCtrl.onChange(function () {\r\n\r\n        //     fadeToAction(api.state, 0.5);\r\n\r\n        // });\r\n\r\n        // statesFolder.open();\r\n\r\n        // emotes\r\n\r\n        // var emoteFolder = gui.addFolder('Emotes');\r\n\r\n\r\n\r\n        // for (i = 0; i < emotes.length; i++) {\r\n\r\n        //     createEmoteCallback(emotes[i]);\r\n\r\n        // }\r\n\r\n        // emoteFolder.open();\r\n\r\n        // expressions\r\n\r\n        // face = model.getObjectByName('Head_2');\r\n\r\n        // var expressions = Object.keys(face.morphTargetDictionary);\r\n        // var expressionFolder = gui.addFolder('Expressions');\r\n\r\n        // for (i = 0; i < expressions.length; i++) {\r\n\r\n        //     expressionFolder.add(face.morphTargetInfluences, i, 0, 1, 0.01).name(expressions[i]);\r\n\r\n        // }\r\n\r\n        activeAction = actions['Walking'];\r\n        activeAction.play();\r\n\r\n        // expressionFolder.open();\r\n\r\n    }\r\n\r\n    const fadeToAction = (name, duration, callback) => {\r\n\r\n        previousAction = activeAction;\r\n        activeAction = actions[name];\r\n\r\n        if (previousAction !== activeAction) {\r\n\r\n            previousAction.fadeOut(duration);\r\n\r\n        }\r\n\r\n\r\n        if (callback)\r\n            setTimeout(() => callback(), 3000 * duration)\r\n\r\n        activeAction\r\n            .reset()\r\n            .setEffectiveTimeScale(1)\r\n            .setEffectiveWeight(1)\r\n            .fadeIn(duration)\r\n            .play();\r\n\r\n    }\r\n\r\n    const onWindowResize = () => {\r\n\r\n        camera.aspect = window.innerWidth / window.innerHeight;\r\n        camera.updateProjectionMatrix();\r\n\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n\r\n    }\r\n\r\n    //\r\n\r\n    const animate = () => {\r\n\r\n        var dt = clock.getDelta();\r\n\r\n        if (mixer) mixer.update(dt);\r\n\r\n        requestAnimationFrame(animate);\r\n\r\n        renderer.render(scene, camera);\r\n\r\n        // stats.update();\r\n        update()\r\n    }\r\n    const update = () => {\r\n\r\n        if (activeAction._clip.name === 'Death')\r\n            return\r\n        let i = 0.1\r\n        if (activeAction._clip.name === 'Running')\r\n            i = 0.2\r\n        if (activeAction._clip.name === 'Walking' || activeAction._clip.name === 'Running') {\r\n\r\n            model.current.position[state.direction] += i * state.value;\r\n            camera.position[state.direction] += i * state.value;\r\n\r\n            if (checkCollide(model.current.position, cube.position, 2)) {\r\n                const state = activeAction._clip.name\r\n                fadeToAction('Jump', 0.2, () => fadeToAction(state, 0.2))\r\n                point += 1\r\n                scene.remove(pointView)\r\n                loadText();\r\n                pointView.updateMorphTargets();\r\n                RandomCube(cube)\r\n            }\r\n\r\n            // Set Vector\r\n            arrowHelper.position.z = model.current.position.z - 5\r\n            arrowHelper.position.x = model.current.position.x\r\n            pointView.position.x = model.current.position.x - centerOffset\r\n            pointView.position.z = model.current.position.z + 1\r\n            arrowHelper.setDirection(new THREE.Vector3(cube.position.x - model.current.position.x, 0, cube.position.z - model.current.position.z))\r\n        }\r\n        if (model.current.position.x > 100 || model.current.position.x < -100 || model.current.position.z > 100 || model.current.position.z < -100)\r\n            fadeToAction('Death', 0.5)\r\n    }\r\n\r\n    const onKeyPress = (e) => {\r\n        if (e.key === currKey && activeAction._clip.name !== 'Running') {\r\n            fadeToAction('Running', 0.5)\r\n            return\r\n        } else\r\n            fadeToAction('Walking', 0.5)\r\n        if (e.key === 'a') {\r\n            state = { direction: 'x', value: 1 }\r\n            rotate(1);\r\n        } else if (e.key === 'w') {\r\n            state = { direction: 'z', value: 1 }\r\n            rotate(0);\r\n        } else if (e.key === 's') {\r\n            state = { direction: 'z', value: -1 }\r\n            rotate(2);\r\n        } else if (e.key === 'd') {\r\n            state = { direction: 'x', value: -1 }\r\n            rotate(-1);\r\n        }\r\n        currKey = e.key\r\n    }\r\n    const rotate = (dir) => {\r\n        model.current.rotation.y = 1.6 * dir;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div ref={ref => (mount.current = ref)} />\r\n            <button style={{ bottom: '10vw', right: '10vw', }} onClick={(e) => onKeyPress({ ...e, key: 'w' })}>W</button>\r\n            <button style={{ bottom: 0, right: '10vw', }} onClick={(e) => onKeyPress({ ...e, key: 's' })}>S</button>\r\n            <button style={{ bottom: 0, right: 0, }} onClick={(e) => onKeyPress({ ...e, key: 'd' })}>D</button>\r\n            <button style={{ bottom: 0, right: '20vw', }} onClick={(e) => onKeyPress({ ...e, key: 'a' })}>A</button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Robot;\r\n","import React from 'react';\nimport Robot from './Robot'\n// import Square from './Square';\n\nconst App = () => {\n\n  return (\n    <div>\n      {/* <button style={{position:'fixed',bottom:30,left:30,zIndex:0}} onClick={() => setFlag(!flag)}>W</button>\n      <button style={{position:'fixed',bottom:0,left:30,zIndex:0}} onClick={() => setFlag(!flag)}>S</button>\n      <button style={{position:'fixed',bottom:0,left:60,zIndex:0}} onClick={() => setFlag(!flag)}>D</button>\n      <button style={{position:'fixed',bottom:0,zIndex:0}} onClick={() => setFlag(!flag)}>A</button> */}\n      <Robot />\n      {/* {flag ? <Robot /> : <Square /> } */}\n      {/* <Square /> */}\n    </div>\n  );\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// ReactDOM.render(<Square />, document.getElementById('root'));\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}